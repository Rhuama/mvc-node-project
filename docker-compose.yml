services:
  frontend:
    build:
      context: ./src/Frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
    command: npm run dev

  backend:
    build:
      context: ./src/Backend
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app 
    environment:
      - NODE_ENV=development
      - DB_HOST=db
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
    depends_on:
      - db
    command: npm run dev

  db:
    image: mysql:latest
    container_name: mvc-node-project-db
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  metabase:
    image: metabase/metabase:latest
    container_name: mvc-node-project-metabase
    environment:
      MB_DB_TYPE: mysql
      MB_DB_DBNAME: ${DB_NAME}
      MB_DB_PORT: 3306
      MB_DB_USER: ${DB_USER}
      MB_DB_PASS: ${DB_PASSWORD}
      MB_DB_HOST: db
    ports:
      - "8080:3000"
    depends_on:
      - db

volumes:
  mysql_data:
